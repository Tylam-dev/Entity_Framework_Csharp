// <auto-generated />
using System;
using Entity_Framework_Csharp;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Entity_Framework_Csharp.Migrations
{
    [DbContext(typeof(TareasContext))]
    [Migration("20240705161202_InitialData")]
    partial class InitialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Entity_Framework_Csharp.Categoria", b =>
                {
                    b.Property<Guid>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<int>("Peso")
                        .HasColumnType("integer");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categoria", (string)null);

                    b.HasData(
                        new
                        {
                            CategoriaId = new Guid("baf7eeb1-8841-4474-9f22-fb61b644de20"),
                            Nombre = "Actividades Pendientes",
                            Peso = 2
                        },
                        new
                        {
                            CategoriaId = new Guid("baf7eeb1-8841-4474-9f22-fb61b644de02"),
                            Nombre = "Actividades Personales",
                            Peso = 50
                        });
                });

            modelBuilder.Entity("Entity_Framework_Csharp.Tarea", b =>
                {
                    b.Property<Guid>("TareaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoriaId")
                        .HasColumnType("uuid");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PrioridadTarea")
                        .HasColumnType("integer");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("TareaId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Tarea", (string)null);

                    b.HasData(
                        new
                        {
                            TareaId = new Guid("baf7eeb1-8841-4474-9f22-fb61b644de08"),
                            CategoriaId = new Guid("baf7eeb1-8841-4474-9f22-fb61b644de20"),
                            FechaCreacion = new DateTime(2024, 7, 5, 16, 12, 2, 653, DateTimeKind.Utc).AddTicks(7080),
                            PrioridadTarea = 1,
                            Titulo = "Pago de servicios publicos"
                        },
                        new
                        {
                            TareaId = new Guid("baf7eeb1-8841-4474-9f22-fb61b644de15"),
                            CategoriaId = new Guid("baf7eeb1-8841-4474-9f22-fb61b644de02"),
                            FechaCreacion = new DateTime(2024, 7, 5, 16, 12, 2, 653, DateTimeKind.Utc).AddTicks(7080),
                            PrioridadTarea = 0,
                            Titulo = "Terminar de ver pelicula"
                        });
                });

            modelBuilder.Entity("Entity_Framework_Csharp.Tarea", b =>
                {
                    b.HasOne("Entity_Framework_Csharp.Categoria", "Categoria")
                        .WithMany("Tareas")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Entity_Framework_Csharp.Categoria", b =>
                {
                    b.Navigation("Tareas");
                });
#pragma warning restore 612, 618
        }
    }
}
